name: Build and Deploy
on:
    push:
        branches: [ main, develop ]
    pull_request:
        branches: [ main ]
        
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build test services
      run: |
        docker compose build
        docker compose up -d
        sleep 15
        docker compose down
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirements.txt
        pip install pytest
        pip install flake8
        
    - name: Run test
      run: |
        cd app
        python -m pytest
    
    - name: Run flake8
      run: |
        cd app
        flake8 .

  deploy-to-staging:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to Staging Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.STAGING_HOST }}
        username: ${{ secrets.STAGING_USER }}
        key: ${{ secrets.STAGING_SSH_KEY }}
        port: ${{ secrets.STAGING_PORT }}
        timeout: 60s
        command_timeout: 15m
        script: |
          cd /home/${{ secrets.STAGING_USER }}/my_pet
          git pull origin develop
          docker compose -f docker-compose.staging.yml down
          docker compose -f docker-compose.staging.yml build
          docker compose -f docker-compose.staging.yml up -d

  deploy-to-production:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to Production
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.PROD_HOST }}
        username: ${{ secrets.PROD_USER }}
        key: ${{ secrets.PROD_SSH_KEY }}
        port: ${{ secrets.PROD_PORT }}
        timeout: 60s
        command_timeout: 15m
        script: |
          cd /home/${{ secrets.PROD_USER }}/my_pet
          git pull origin main
          docker compose -f docker-compose.prod.yml down
          docker compose -f docker-compose.prod.yml build
          docker compose -f docker-compose.prod.yml up -d