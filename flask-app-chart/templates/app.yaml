apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
spec:
  replicas: {{ .Values.app.replicas }}

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1   
      maxSurge: 1         
  revisionHistoryLimit: 5

  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
    spec:
      containers:
      - name: {{ .Values.app.name }}
        image: {{ .Values.app.image }}
        ports:
        - containerPort: {{ .Values.app.port }}
        env:
        - name: DATABASE_URL
          value: "postgresql://{{ .Values.postgres.username }}:{{ .Values.postgres.password }}@{{ .Values.postgres.name }}:5432/{{ .Values.postgres.database }}"

        # проверки
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.app.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.app.port }}
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.app.name }}
spec:
  type: NodePort
  ports:
  - port: {{ .Values.app.port }}
    targetPort: {{ .Values.app.port }}
    nodePort: 30000  
  selector:
    app: {{ .Values.app.name }}